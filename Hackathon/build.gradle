apply plugin: "java"
apply plugin: "maven"
apply plugin: 'scala'
apply plugin: 'application'


version = 1.0
sourceCompatibility = 1.7

jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart', 'Implementation-Version': version
    }
}

repositories {
    mavenCentral()

}

repositories {
    maven {
        url "https://dl.bintray.com/spark-jobserver/maven"
    }
}

configurations {
    provided
    compile.extendsFrom provided
}

dependencies {

    provided 'org.scala-lang:scala-library:2.10.3'
    provided 'spark.jobserver:job-server-api:0.5.0'
    provided 'org.apache.spark:spark-core_2.10:1.3.0'
    provided 'org.apache.spark:spark-mllib_2.10:1.3.0'
    compile 'com.rabbitmq:amqp-client:3.3.0'
    compile 'org.apache.spark:spark-streaming_2.10:1.3.0'
    compile 'com.typesafe.akka:akka-remote_2.10:2.2.3'
    testCompile 'junit:junit:4.11'
}
sourceSets {
    main {
		scala {
        	srcDirs 'src/main/scala'
            compileClasspath += configurations.provided
        }
    }
}

sourceSets.main.java.srcDirs = []
mainClassName = 'com.hack.hotel.Main.Process'


task fatJar(type: Jar, dependsOn: assemble) {
    baseName = project.name
    if(mainClassName) {
        from { (configurations.runtime - configurations.provided).collect { it.isDirectory() ? it : zipTree(it) } }
        manifest { attributes 'Main-Class': mainClassName }
        exclude 'META-INF/*.SF'
        with jar
    } else {
        println "Error creating fatJar. Main class not specified!"
        exit(1)
    }
}